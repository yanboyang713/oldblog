#+title: Boyang Yan's Blog
#+hugo_base_dir: ~/blog/
#+hugo_section: posts
#+hugo_front_matter_format: yaml

* Emacs :@Emacs:
** DONE Getting Started with Doom Emacs
CLOSED: [2021-10-05 Tue 03:44]
:PROPERTIES:
:EXPORT_FILE_NAME: doom
:EXPORT_OPTIONS: author:nil
:END:
*** Prerequisites
**** Instation
***** Arch Linux
#+begin_src bash
# required dependencies
pacman -S git emacs ripgrep
# optional dependencies
pacman -S fd
yay -S emacs-pdf-tools-git
```
#+end_src

With Emacs and Doom’s dependencies installed, next is to install Doom Emacs itself:
#+begin_src bash
git clone https://github.com/hlissner/doom-emacs ~/.emacs.d
~/.emacs.d/bin/doom install
#+end_src

*** Sart-up
https://zzamboni.org/post/my-doom-emacs-configuration-with-commentary/

Install the icons to avoid having weird symbols.
*M-x all-the-icons-install-fonts*

*Note*: M-x is SPC :

Open a file

**SPC f f** OR *SPC .*

*** The bin/doom utility
This utility is your new best friend. It won’t spot you a beer, but it’ll shoulder much of the work associated with managing and maintaining your Doom Emacs configuration, and then some. Not least of which is installation of and updating Doom and your installed packages.

It exposes a variety of commands. *bin/doom* help will list them all, but here is a summary of the most important ones:

+ *doom sync*: This synchronizes your config with Doom Emacs. It ensures that needed packages are installed, orphaned packages are removed and necessary metadata correctly generated. Run this whenever you modify your doom! block or packages.el file. You’ll need doom sync -u if you override the recipe of package installed by another module.
+ *doom upgrade*: Updates Doom Emacs (if available) and all its packages.
doom env: (Re)generates an “envvar file”, which is a snapshot of your shell environment that Doom loads at startup. If your app launcher or OS launches Emacs in the wrong environment you will need this. **This is required for GUI Emacs users on MacOS.**
+ *doom doctor*: If Doom misbehaves, the doc will diagnose common issues with your installation, system and environment.
+ *doom purge*: Over time, the repositories for Doom’s plugins will accumulate. Run this command from time to time to delete old, orphaned packages, and with the -g switch to compact existing package repos.
Use doom help to see an overview of the available commands that doom provides, and doom help COMMAND to display documentation for a particular COMMAND.

I recommend you add a couple of *alias* to your ZSH configuration.
#+begin_example
# Doom Emacs
alias doomsync="$HOME/.emacs.d/bin/doom sync"
alias doomupgrade="$HOME/.emacs.d/bin/doom upgrade"
alias doomdoctor="$HOME/.emacs.d/bin/doom doctor"
alias doompurge="$HOME/.emacs.d/bin/doom purge"
alias doomclean="$HOME/.emacs.d/bin/doom clean"
alias doombuild="$HOME/.emacs.d/bin/doom build"
#+end_example

*** Doom config file overview
We already know how to open a file and how to use doom utility, so let's we take a overview for Doom configuration.

Doom Emacs at the least uses three config files.

+ *init.el* defines which of the existing Doom modules are loaded. A Doom module is a bundle of packages, configuration and commands, organized into a unit that can be toggled easily from this file. You also can design your own *Module*.
+ *packages.el* defines which packages should be installed, beyond those that are installed and loaded as part of the enabled modules.
+ *config.el* contains all custom configuration and code. when you have get so many configuration contains, you may need seperate for each category. There is a example. Click [[https://github.com/yanboyang713/doom.git][Here]]

There are other files that can be loaded, but theses are the main ones. The load order of different files is defined depending on the type of session being started.

**** Config file headers
We start by simply defining the standard headers used by the three files. These headers come from the initial files generated by doom install, and contain either some Emacs-LISP relevant indicators like lexical-binding, or instructions about the contents of the file.

+ init.el
+ packages.el
+ config.el

#+begin_example
;;; ../../dotfiles/doom/+research.el -*- lexical-binding: t; -*-
#+end_example

**** Customized variables
Doom [[https://github.com/hlissner/doom-emacs/blob/develop/docs/getting_started.org#configure][does not recommend the Emacs customize mechanism]] :

*Note*: do not use M-x customize or the customize API in general. Doom is designed to be configured programmatically from your config.el, which can conflict with Customize’s way of modifying variables.

All necessary settings are therefore set by hand as part of this configuration file. The only exceptions are “safe variable” and “safe theme” settings, which are automatically saved by Emacs in custom.el, but this is OK as they don’t conflict with anything else from the config.

*** General configuration
My user information.
#+begin_src emacs-lisp
(setq user-full-name "Boyang Yan"
      user-mail-address "yanboyang713@gamil.com")
#+end_src

*** Projects with Projectile, File Explorer with Treemacs & EShell
**** Projectile
Doom Emacs have used package [[https://github.com/bbatsov/projectile][Projectile]] to management our project.

*SPC p p* - Switch to project.
*SPC SPC* - Find a File in a project

#+begin_src emacs-lisp
projectile-project-search-path '("~/Project/" "~/dotfiles/" "~/blog/content-org/")
#+end_src

**** Treemacs
SPC o p - Open
When Treemacs is opened, you can type *q* to close.


** TODO Getting Started with send and receive Email with Doom Emacs
:PROPERTIES:
:EXPORT_FILE_NAME: sendAndReceiveEmailWithdoom
:EXPORT_OPTIONS: author:nil
:END:
*** Receive Email
#+begin_src console
yay -S mu mbsync-git
#+end_src

https://devanswers.co/create-application-specific-password-gmail/

#+begin_src console
gpg2 -c xxxxxxx
#+end_src

#+begin_src console
time mu init --maildir=~/MailDir --my-address='yanboyang713@gmail.com'
mu index

time mbsync -c ~/.config/mu4e/mbsyncrc -a

#+end_src

[yanboyang713@Boyang-PC] ➜ ~ time mu init --maildir=~/MailDir --my-address='yanboyang713@gmail.com'
error: failed to open store @ /home/yanboyang713/.cache/mu/xapian: Unable to get write lock on /home/yanboyang713/.cache/mu/xapian: already locked
mu init --maildir=~/MailDir --my-address='yanboyang713@gmail.com'  0.00s user 0.00s system 66% cpu 0.006 total
[yanboyang713@Boyang-PC] ➜ ~ mu index
error: failed to open store @ /home/yanboyang713/.cache/mu/xapian: Unable to get write lock on /home/yanboyang713/.cache/mu/xapian: already locked


pkill -2 -u $UID mu
sleep 1
mu index



Using GPG for mbsync passwords
The basic idea is that every time a password is needed, an particular file is decrypted and loaded. The key for the decryption can be prompted for and be stashed by gpg-agent. The first step is to create a GPG key, which is covered very well elsewhere. The standard authentication mechanism for gnus and smtpmail can be reused to store login information for mbsync. For any one account, the password for IMAP access and the password for sending email (usually the same) can be added to ~/.authinfo.gpg:

machine imap.gmail.com login MyAccountName@gmail.com password MYPASSWORD machine smtp.gmail.com login MyAccountName@gmail.com password MYPASSWORD The first line is used by mbsync and the second by smtpmail. The line: PassCmd “gpg2 -q –for-your-eyes-only –no-tty -d ~/.authinfo.gpg | awk ’machine imap.gmail.com login MyAccountName@gmail.com {print $NF}’”

*** Send Email

#+begin_src console
yay -S msmtp msmtp-mta s-nail
#+end_src
echo "hello there username." | msmtp -a default username@domain.com

~/.mailrc
set mta=/usr/bin/msmtp


*** Doom Emacs Set-up
(package! mu4e)

*** Usage
https://cheatography.com/ddoherty03/cheat-sheets/mu4e-with-gmail-hints/

* Computer Vision :@ComputerVision:

** DONE Getting started with FFmpeg
CLOSED: [2021-11-01 Mon 15:03]
:PROPERTIES:
:EXPORT_FILE_NAME: ffmpeg
:EXPORT_OPTIONS: author:nil
:END:
*** Overview
FFmpeg is a free software project and is the leading software for everything related to multimedia like video encoding, streaming and muxing.

FFmpeg - "FF" mean "Fast Forward", "mpeg" mean "Moving Picture Expers Group"

*** Installation
https://github.com/jrottenberg/ffmpeg

https://www.whoishostingthis.com/compare/ffmpeg/resources/

alias ffmpeg='docker run -v=`pwd`:/tmp/ffmpeg opencoconut/ffmpeg'

#+begin_src bash
yay -S ffmpeg
#+end_src

*** Using Linux Terminal to Install VLC in Ubuntu
sudo snap install vlc

*** Invert the video stream to a virtual video camera
If your video stream is inverted, you can make a new virtual video camera which inverts the inverted video. You need to install v4l-utils and also v4l2loopback-dkms.

#+begin_src bash
yay -S v4l-utils v4l2loopback-dkms
#+end_src

*** Create the virtual video camera:
#+begin_src bash
modprobe v4l2loopback
#+end_src
https://askubuntu.com/questions/881305/is-there-any-way-ffmpeg-send-video-to-dev-video0-on-ubuntu

Check the name of the newly created camera:

#+begin_src console
[yanboyang713@boyang ~]$ v4l2-ctl --list-devices
Dummy video device (0x0000) (platform:v4l2loopback-000):
	/dev/video0
#+end_src

*** Image to virtual camera
ffmpeg -re -loop 1 -i input.jpg -vf format=yuv420p -f v4l2 /dev/video0


Then you can run ffmpeg to read from your actual webcam (here /dev/video0) and invert it and feed it to the virtual camera:

$ ffmpeg -f v4l2 -i /dev/video0 -vf "vflip" -f v4l2 /dev/video1
You can use the "Dummy" camera in your applications instead of the "Integrated" camera.

Bad image quality
If you experience images being too bright, too dark, too exposed or any other, you can install v4l2ucpAUR to tweak your image output.


** TODO Image Compression Based on Principal Component Analysis (PCA)
:PROPERTIES:
:EXPORT_FILE_NAME: PCAforImage
:EXPORT_OPTIONS: author:nil
:END:
*** Introduction
Principal Component Analysis (PCA) is a linear dimensionality reduction technique (algorithm) that transform a set of correlated variables (p) into a smaller k (k<p) number of uncorrelated variables called principal components while keeping as much of the variability in the original data as possible.

One of the use cases of PCA is that it can be used for image compression — a technique that minimizes the size in bytes of an image while keeping as much of the quality of the image as possible.



** DONE Beginning Explore artificial intelligence and computer vision
CLOSED: [2021-10-07 Thu 19:17]
:PROPERTIES:
:EXPORT_FILE_NAME: firstExploreAIandComputerVision
:EXPORT_OPTIONS: author:nil
:END:

*** What is artificial intelligence?
**** Explore into artificial intelligence
For the definition of artificial intelligence, academic research area always have different understandings. The widely accepted definition is:

+ *Artificial intelligence is the use of machines to simulate human cognitive abilities technology*.

Artificial intelligence involves a wide range of insights, learning, reasoning and decision-making.

From the perspective of industry application, the core ability of artificial intelligence ability is to make judgments or predictions based on given input.

The rise of deep learning and the three booms of AI.
[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633594626/cv/MLThreeBooms_xnexn3.png]]

The Turing test, the cornerstone of artificial intelligence
[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633607665/cv/turingTest_000_wuxoka.png]]


**** Three core elements of artificial intelligence
Three core elements of AI: data, algorithm and compute resource.
[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633609084/cv/threeCoreElements_pj0xlg.png]]

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633609181/cv/threeCoreElementsOne_vn5zm9.png]]

***** Data
[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633607997/cv/data_yoauah.png]]

***** Algorith
When you give a computer a task, you tell it not only what to do, but how to do it and a set of instructions about how to do it is called an algorithm.

+ Traditional algorithms -- traversal
+ Smarter algorithms -- gradient descent
+ More complex algorithms -- machine learning

***** Compute Resource/Power
 Breakthrough in computing power -- traditional CPU and new computing acceleration technology.

 [[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633608323/cv/cpu_tkdhfn.png]]

 [[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633608393/cv/fpga_bsknu0.png]]

 [[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633608486/cv/compare_ou1gus.png]]

 smart chip
 [[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633608633/cv/smartChip_ev498y.png]]


**** Artificial intelligence technonly relationship
[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633609345/cv/relationship_nugk48.png]]

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633673844/cv/AIrelationship_myqcj6.png]]

+ *Machine learning*: a way to achieve artificial intelligence

It is a multi-field interdisciplinary subject, involving probability theory, statistics, approximation theory, convex analysis, algorithm complexity theory and other subjects. Machine learning is the core of artificial intelligence, the fundamental way to make computers intelligent, and its applications are widespread
In all fields of artificial intelligence, it mainly uses induction and synthesis rather than deduction.

+ *Deep learning*: a technology that implements machine learning.

It uses a deep neural network to process the model more complex, so that the model has a deeper understanding of the data. It is a method of machine learning based on data representation learning. The motivation is to establish and simulate the human brain to analyzing the learning neural network, it imitates the mechanism of the human brain to interpret data, such as images, sounds and texts. The essence of deep learning is to learn more by building a machine learning model with many hidden layers and massive training data. Use the features to ultimately improve the accuracy of classification or prediction.

+ *Artificial neural network*: a machine learning algorithm

Neural networks generally have input layer -> hidden layer -> output layer. Generally speaking, a neural network with more than two hidden layers is called a deep neural network. Deep learning is a machine that uses a deep architecture like a deep neural network. Learn method.

***** What is machine Learning
*Artificial intelligence is a technology that uses machines to simulate human cognitive abilities*.

+ Traditional artificial intelligence methods: logical reasoning, expert systems (answering questions based on manually defined rules), etc.;

+ Contemporary artificial intelligence generally acquires the ability to make predictions and judgments through learning-machine learning

#+begin_example
Normal cat: round head, short face, five fingers on the forelimbs, four toes on the hind limbs, with sharp and curved claws at the ends of the toes,
The claws can stretch. Nocturnal. ---Baidu Encyclopedia
#+end_example

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633610156/cv/ml1_zrobow.png]]

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633610156/cv/ml2_lb82ew.png]]

***** Typical machine learning process
[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633610289/cv/ml3_tzhdmh.png]]

***** What is Neural Network
****** How do people think? --Biological Neural Network

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633610519/cv/neuron_lhvbvb.png]]

sensor:
1. External stimulation passes through nerve endings and turns converted into electrical signals, transduced to nerve cells (Also called neuron)
2. Numerous neurons form the nerve center
3. The nerve center integrates various signals to do judgement.
4. According to the instructions of the nerve center, the human body respond to external stimuli.

****** How does the machine think? --Artificial neural networks

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633672744/cv/arNeuron_awz0bq.png]]

Artificial neuron

Input: x1,x2,x3
Output: output
Simplified model: It is agreed that each input has only two possible 1 or 0

All inputs are 1, which means that various conditions are met, and the output is 1;

All inputs are 0, which means that the condition is not true, and the output is 0

#+begin_example
Is watermelon good or bad?
Color: green; root: curled up; knock: voiced thoughts. ---Good melon
#+end_example

#+begin_example
Family Spring Outing?
Price: high and low; weather: good or bad; family: can you travel
#+end_example

****** The logical architecture of the neural network

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633673214/cv/architectureNeuralNetworkOne_sijbou.png]]

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633673216/cv/architectureNeuralNetworkTwo_l4dsh1.png]]

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633673225/cv/architectureNeuralNetworkThree_cuepcr.png]]



***** What is Deep Learning
Deep neural network & deep learning

+ The traditional neural network has developed to a situation with multiple hidden layers,

+ Neural networks with multiple hidden layers are called deep neural networks, and machine learning research based on deep neural networks is called deep learning.

  [[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633673700/cv/DeepLearning_tq9n1e.png]]

**** The foreseeable future of artificial intelligence
***** Computer vision

+ Typical technology:
Face detection, tracking, recognition and attribute analysis, pedestrian and vehicle detection, tracking, recognition and attribute analysis, text detection and recognition, object detection and recognition

+ Typical application:
Face authentication, intelligent transportation, robot vision (such as drones), image search engine, image and video understanding, image and video beautification

***** Speech Recognition

+ Typical technology:
Voice recognition, voiceprint recognition, multi-microphone array system

+ Typical application:
Voice input, voice control, intelligent assistant, machine translation, robot hearing

***** natural language

+ Typical technology:
Words and sentences embedded, semantic modeling

+ Typical application:
Chatbot, smart assistant, smart customer service, video Frequency understanding, machine translation

*** Computer vision (CV)
**** What is CV
Several more rigorous definitions:

+ "Construct a clear and meaningful description of the objective objects in the image" (Ballard & Brown, 1982)

+ "Calculate the characteristics of the three-dimensional world from one or more digital images" (Trucco & Verri, 1998)

+ "Based on perceptual images to make useful decisions for objective objects and scenes" (Sockman & Shapiro, 2001)

Overview in one sentence:

It means that the computer has the ability to see, know, and think. It can be said that the computer has vision, that is, computer vision.

**** Deep learning and CV
[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633674756/cv/computerVisionOne_kjgmyf.png]]

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633674755/cv/computerVisionTwo_l2tvqa.png]]

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633674756/cv/computerVisionThree_rdqpta.png]]

**** Application of CV
***** Image Classification

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633678185/cv/classificationOne_lqnjcd.png]]

Image Classification - Neural Neural Network (CNN)

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633678184/cv/classificationTwo_pu6kuc.png]]

Linear rectifier layer--RELU

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633678183/cv/classificationThree_zhnzgk.png]]

Pooling layer-pool

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633678183/cv/classificationFour_k9lyy9.png]]

***** Target Detection

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633678492/cv/detactionOne_rsz53f.png]]

R-CNN

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633678492/cv/detactionTwo_lnellb.png]]

***** Target Tracking
[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633678587/cv/tracking_rjkb2z.png]]

***** Semantic Image Segmentation
[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633678681/cv/SegmentationOne_zfgix9.png]]

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633678681/cv/SegmentationTwo_orkdal.png]]

***** Instance Segmentation

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633678767/cv/instanceOne_duswl8.png]]

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633678767/cv/instanceTwo_osehjy.png]]

**** CV skills tree construction

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633680105/cv/treeOne_kbmiwg.png]]

[[https://res.cloudinary.com/dkvj6mo4c/image/upload/v1633680106/cv/treeTwo_wchdqb.png]]


** DONE Gettting Started SRS(Simple Realtime Server)
CLOSED: [2021-11-13 Sat 11:43   ]
:PROPERTIES:
:EXPORT_FILE_NAME: srs
:EXPORT_OPTIONS: author:nil
:END:

*** Overview
SRS is a simple, high efficiency and realtime video server, supports RTMP/WebRTC/HLS/HTTP-FLV/SRT.


* Cluster :@Cluster:
** DONE Getting Started ROS and Openwrt with Proxmox
CLOSED: [2021-11-05 Fri 19:52]
:PROPERTIES:
:EXPORT_FILE_NAME: ROSandOpenwrtProxmox
:EXPORT_OPTIONS: author:nil
:END:

*** Install Open vSwitch
Update the package index and then install the Open vSwitch packages by executing:

#+begin_src console
 apt update
 apt install ifupdown2
 apt install openvswitch-switch
#+end_src

root@pve-home:~# cat /etc/network/interfaces
https://karneliuk.com/2021/08/infrastructure-1-building-virtualized-environment-with-debian-linux-and-proxmox-on-hp-and-supermicro/

ifreload -a
ifup vmbr0

#+begin_src file
auto lo
iface lo inet loopback

auto enp6s0
iface enp6s0 inet manual

auto enp1s0
iface enp1s0 inet manual

auto enp2s0
iface enp2s0 inet manual

auto enp3s0
iface enp3s0 inet manual

auto enp5s0
iface enp5s0 inet manual

auto ens9
iface ens9 inet manual

auto vlan1
iface vlan1 inet static
        address 192.168.1.2/24
        gateway 192.168.1.1
        ovs_type OVSIntPort
        ovs_bridge vmbr0
        ovs_options vlan_mode=access
        ovs_extra set interface ${IFACE} external-ids:iface-id=$(hostname -s)-${IFACE}-vif
        dns-nameservers 192.168.1.1 8.8.8.8 8.8.4.4

auto bond0
iface bond0 inet manual
        ovs_bonds enp1s0 enp2s0 enp3s0 ens9 enp5s0
        ovs_type OVSBond
        ovs_bridge vmbr0
        ovs_options vlan_mode=native-untagged bond_mode=balance-slb

auto vmbr0
iface vmbr0 inet manual
        ovs_type OVSBridge
        ovs_ports bond0 vlan1
#+end_src


*** mikrotik
https://mikrotik.com/software


*** OpenWrt
https://openwrt.org/downloads
https://downloads.openwrt.org/releases/21.02.1/targets/x86/
https://downloads.openwrt.org/releases/21.02.1/targets/x86/64/
*** Migration of servers to Proxmox VE
https://pve.proxmox.com/wiki/Migration_of_servers_to_Proxmox_VE
*** VLAN
https://engineerworkshop.com/blog/configuring-vlans-on-proxmox-an-introductory-guide/

** DONE Getting Started Configuring VLANs on Proxmox
CLOSED: [2021-11-05 Fri 19:52]
:PROPERTIES:
:EXPORT_FILE_NAME: vlan
:EXPORT_OPTIONS: author:nil
:END:
*** Introduction
A virtualization server allows you to run multiple machines, virtual machines (VMs), on one physical device, also known as the host. There could be many different VMs each for different tasks. In this guide, we will discuss configuring your Proxmox virtualization server to use VLANs so that you can group related VMs onto their own subnet.
*** Motivation
For security, as well as organizational purposes, physical machines are often separated on the network from each other by VLANs. By logically separating devices based on their functionality with these VLANs, we can make sure that our family's personal devices aren't sitting out in the open on the same subnet exposed to our internet-facing web servers. This is fairly easy on your regular network setup because the devices are physically separate from each other and so each ethernet port physically connected to a device can be assigned an individual VLAN.

However, this system starts to break down when faced with virtualization servers. This is because diverse virtual machines are all sitting on the same physical host, forcing each VM to share the same physical connection. With a standard bridge between the individual VM and the host's NIC, we necessarily end up with each VM on the same subnet as the Proxmox host itself. Additionally, we end up with each VM on the same subnet as every other VM on that host. Not ideal.
*** Solution
Thankfully there's a way around this. In Proxmox, you can make your virtual bridge VLAN-aware so you can pass multiple VLANs through to your Proxmox server using only a single physical port. The individual VMs can then be configured to use whichever VLAN you choose.

** DONE Build a Kubernetes cluster on Proxmox via Ansible and Terraform
CLOSED: [2021-12-01 Wed 20:27]
:PROPERTIES:
:EXPORT_FILE_NAME: k8sOnProxmox
:EXPORT_OPTIONS: author:nil
:END:

[[https://miro.medium.com/max/1400/1*jL6SE1nSaPQb4EOWGnbZpw.jpeg]]


*** Overview
Proxmox is an open-source hypervisor that have enterprise capabilities and a large community behind it.

For Terraform and Ansible, i always like the idea of infrastructure as code (iac) and Terraform and Ansible just make it easy to accomplish.

The idea here was to be able to spin up a k3s cluster with minimum effort so i can spin it up and down for ever project that i would like to run.

*** System requirements
+ The deployment environment must have [[https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html][Ansible]] 2.4.0+
+ [[https://learn.hashicorp.com/tutorials/terraform/install-cli][Terraform]] installed
+ [[https://www.proxmox.com/en/proxmox-ve][Proxmox]] server

* DevOps :@DevOps:
** DONE DevOps Beginner's Guide
CLOSED: [2021-12-02 Thu 11:18]
:PROPERTIES:
:EXPORT_FILE_NAME: DevOps
:EXPORT_OPTIONS: author:nil
:ID:       807c90ce-9dfd-44be-861b-b2893282ed5f
:END:

*** Overview
In this blog, I discussed *what is DevOps*, and why it has *gained* so much *traction* in the IT industry lately.

*** What Is DevOps?
It is a combination of practices that *streamline* the *automation* and *integration* of processes between the *software development* and *IT teams*. This will help them to *build*, *test*, and *release software* in a faster and more reliable way.

**** Purpose
The term was formed by combining the words *"development"* and *"operations"* and signifies a cultural shift that *helps bridge the gap between the development and operation teams*.
**** Goal
 The *goal* of DevOps is to change and improve the relationship by advocating better communication and collaboration between these two business units.

*** DevOps Model For Teams
Teams using the DevOps model are able to evolve and improve their products at a higher rate over the organizations that use traditional processes. *Collaboration*, *Communication*, and *Integration* are the key elements of incorporating DevOps into any development and delivery setting.

This speed enables the teams (and in turn their organizations) to better serve their customers and compete more effectively in the market.

[[https://d1.awsstatic.com/product-marketing/DevOps/DevOps_feedback-diagram.ff668bfc299abada00b2dcbdc9ce2389bd3dce3f.png]]

*** DevOps Advantages
Improvement of collaboration between all stakeholders from planning through delivery and automation of the delivery process in order to:

+ Increase deployment frequency
+ Achieve faster time to market
+ Decrease the failure rate of new releases
+ Shorten the lead time between fixes
+ Improve mean time to recovery

According to the State of DevOps Report, "high-performing IT organizations deploy 30x more frequently with 200x shorter lead times; they have 60x fewer failures and recover 168x faster."

*** DevOps Principles
The phrase “The Three Ways” is used to describe the underlying principles of the DevOps movement.

**** The First Way: Principles of Flow
The First Way states the following, about the flow of work:

+ Work should only flow in one direction
+ No known defect should be passed downstream
+ Always seek to increase the flow

**** The Second Way: Principles of Feedback
The Second Way describes the feedback process as the following:

+ Establish an upstream feedback loop
+ Shorten the feedback loop
+ Amplify the feedback loop
  [[https://blog-assets.freshworks.com/freshservice/wp-content/uploads/2019/01/23142830/2.png]]

**** The Third Way: Principles of Continuous Learning
The Third Way describes the environment and culture, as the following practices

+ Promote experimentation
+ Learn from success and failure
+ Constant improvement
+ Seek to achieve mastery through practice

[[https://blog-assets.freshworks.com/freshservice/wp-content/uploads/2019/01/23142856/3.png]]

** DONE test
CLOSED: [2021-12-02 Thu 12:15]
:PROPERTIES:
:EXPORT_FILE_NAME: test
:EXPORT_OPTIONS: author:nil
:END:

*** testH
[[id:807c90ce-9dfd-44be-861b-b2893282ed5f][DevOps/DevOps Beginner's Guide]]
1. one item
2. <<target>>another item
Here we refer to item [[target]].

** DONE Terraform Beginner's Guide
CLOSED: [2021-12-02 Thu 11:09]
:PROPERTIES:
:EXPORT_FILE_NAME: terraform
:EXPORT_OPTIONS: author:nil
:END:

*** Overview
In this blog post, I am going to cover a brief introduction of *Infrastructure as Code (IaC)*, *Terraform*, its *lifecycle*, and all the core concepts that every beginner should know. I have tried to cover all the topics in this beginner’s guide that will give you a quick start for using Terraform.

*** Prerequires

*** What Is Infrastructure as Code (IaC)?


*** What Is Terraform?


*** Terraform Lifecycle

*** Terraform Core Concepts

*** Terraform Installation

*** Terraform Providers

*** Terraform Configuration Files

*** Getting started using Terraform

*** Import Existing Infrastructure

*** Conclusion

*** Related/References


** DONE The comparison and introduction between Terraform and Ansible
CLOSED: [2021-12-02 Thu 10:53]
:PROPERTIES:
:EXPORT_FILE_NAME: terraformAndAnsible
:EXPORT_OPTIONS: author:nil
:END:
*** Overview
The Terraform vs. Ansible battle continues to escalate as the DevOps environment focuses more on automation and orchestration. These two tools help in automating configurations and deploying infrastructure. Terraform offers to deploy Infrastructure as a Code, helps in readability and lift and shift deployments. Ansible is a configuration management tool for automating system configuration and management.

*** Terraform

**** What is Terraform?

Terraform is an open-source tool for building, changing, and versioning infrastructure securely and effectively. It is an Infrastructure as a Code tool that is very straightforward to use. It helps to develop and scale Cloud services and manage the state of the network. Its primary use is in data centers and software-defined networking environments. It does not install and manage software on existing devices; instead, it creates, modifies, and destroys servers and various other cloud services. Slack, Uber, Starbucks, Twitch, all big brands are using Terraform. We can also integrate Terraform with Microsoft Azure, Heroku, and Google Compute Engine, etc.

Now, we will discuss the working of terraform.

**** How does Terraform work?


**** Features of Terraform


*** Ansible

**** What is Ansible?

**** How does Ansible work?


**** Features of Ansible


*** Difference between Terraform and Ansible Provisioning

*** Configuration Management vs. Orchestration


*** Procedural vs Declarative


*** Terraform vs Ansible Provisioning


*** Which one to choose: Terraform or Ansible?

*** Conclusion

*** References

* Linux :@Linux:
** DONE Getting Started Dynamic Window Manager (DWM)
CLOSED: [2021-11-30 Tue 17:50]
:PROPERTIES:
:EXPORT_FILE_NAME: dwm
:EXPORT_OPTIONS: author:nil
:END:

*** Introduction


*** Installing
**** Install Xorg

#+begin_src console
pacman -S xorg-server xorg-xinit xorg-xrandr xorg-xsetroot
#+end_src
**** Install DWM
#+begin_src bash
git clone git://git.suckless.org/dwm ~/.config/dwm
git clone git://git.suckless.org/st ~/.config/st
git clone git://git.suckless.org/dmenu ~/.config/dmenu
#+end_src

#+begin_src bash
cd ~/.config/dwm && sudo make install
cd ~/.config/st && sudo make install
cd ~/.config/dmenu && sudo make install
#+end_src
**** Installing a Display Manager (DM)
#+begin_src bash
pacman -S lightdm

pacman -S lightdm-gtk-greeter

pacman -S lightdm-gtk-greeter-settings
#+end_src
**** Enable lightdm service
#+begin_src bash
sudo systemctl enable lightdm
#+end_src
**** Adding an entry for DWM in the DM
Create this file and add the following.
#+begin_src bash
mkdir /usr/share/xsessions

sudo vim /usr/share/xsessions/dwm.desktop
#+end_src

#+begin_src file
[Desktop Entry]
Encoding=UTF-8
Name=Dwm
Comment=the dynamic window manager
Exec=dwm
Icon=dwm
Type=XSession
#+end_src

*** Multi-monitor setup
If configured to use Xinerama libraries in config.mk, dwm can automatically detect configured screen outputs (monitor, overhead projector, etc.) and their resolutions and draw the windows in the output area accordingly.

One of the easiest ways to configure screen outputs is via the RandR X server extension using the xrandr tool. Without arguments it will list the current configuration of screen outputs.

#+begin_src bash
xrandr
#+end_src

For each connected output the supported resolution modes will be printed.

This is a example for set-up xrandr. You can put below content into ~/.xprofile, when system run X windows will set-up montors automatically.
#+begin_src bash
#!/bin/bash

###############################
# Set Monitor                 #
###############################
xrandr --output DP-1 --primary --mode 1920x1080 --pos 0x0 --rotate left --output HDMI-1 --mode 2560x1440 --pos 1080x0 --rotate normal --output DVI-D-1 --off
#+end_src


*** Basic Commands
+ Moving between windows: *[Alt]+[j]* or *[Alt]+[k]*
+ To move a terminal to another tag: *[Shift]+[Alt]+[<TAG_NUMBER>]*
+ To focus on another tag: *[Alt]+[tag number]*
+ To change the amount of windows in the master area: *[Alt]+[d]* (Decrease) or *[Alt]+[i]* (Increase)
+ To toggle a window between the master and stack area: *[Alt]+[Return]*
+ To kill a window: *[Shift]+[Alt]+[c]*
+ Click another tag with the right mouse button to bring those windows into your current focus.
*** Layouts
*Note*: By default dwm is in tiled layout mode.

+ Tiled: *[Alt]+[t]*
+ Floating: *[Alt]+[f]*
+ Monocle: *[Alt]+[m]*

Further layout modes can be included through patches.

*** Floating
To resize the floating window: *[Alt]+[right mouse button]*

To move it around *[Alt]+[left mouse button]*

Floating in Tiled Layout

+ Toggle floating mode on the active window: *[Alt]+[Shift]+[space]*
+ Resize the window: *[Alt]+[right mouse button]*
+ toggle it in being floating *[Alt]+[middle mouse button]*

If you want to set some type of window to be always floating, look at the config.def.h and the rules array, where the last but one element defines this behaviour.

*** Quitting
To quit dwm cleanly: *[Shift]+[Alt]+[q]*
