<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>virtual environment - Category - Boyang Yan's Tech Blog</title><link>https://yanboyang.com/categories/virtual-environment/</link><description>virtual environment - Category - Boyang Yan's Tech Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>yanboyang713@gmail.com (Boyang Yan)</managingEditor><webMaster>yanboyang713@gmail.com (Boyang Yan)</webMaster><lastBuildDate>Mon, 01 Mar 2021 06:11:32 +1000</lastBuildDate><atom:link href="https://yanboyang.com/categories/virtual-environment/" rel="self" type="application/rss+xml"/><item><title>Launching RStudio in Docker</title><link>https://yanboyang.com/rstudio/</link><pubDate>Mon, 01 Mar 2021 06:11:32 +1000</pubDate><author>Author</author><guid>https://yanboyang.com/rstudio/</guid><description>Introduction RStudio Server enables you to provide a browser based interface to a version of R running on a remote Linux server, bringing the power and productivity of the RStudio IDE to server-based deployments of R.
In this blog, I will talk about how to launch a Docker container that allows us to run RStudio in a browser using the &amp;ndash;rm flag when we run Docker makes the container ephemeral that mean it is automatically deleted after we close the container.</description></item><item><title>The Ultimate Guide to Podman, Skopeo and Buildah</title><link>https://yanboyang.com/podmanandskopeoandbuildah/</link><pubDate>Sat, 02 Jan 2021 06:11:32 +1000</pubDate><author>Author</author><guid>https://yanboyang.com/podmanandskopeoandbuildah/</guid><description>Overview https://docs.oracle.com/en/operating-systems/oracle-linux/podman/podman-containers.html#podman-command-reference
Let&amp;rsquo;s we retire Docker and move to Podman. A whole new revolution of containerization started with the Docker where the daemon process manages the whole bunch of things and became one of the most popular and widely used container management systems. However, with the advent of standards from the Open Container Initiative (OCI), other runtimes are being developed. One such runtime is CRI-O, which was created along with a set of tools to provide alternate ways to work directly with containers.</description></item><item><title>Getting started with Python using Conda</title><link>https://yanboyang.com/conda/</link><pubDate>Tue, 08 Sep 2020 06:11:32 +1000</pubDate><author>Author</author><guid>https://yanboyang.com/conda/</guid><description>Introduction This post document is about using Conda to management Python and R language packages (libraries/dependencies), as well as virtual environment. Conda is an open source package management system and environment management system. Conda can quickly installs, runs and updates packages and their dependencies. Conda easily creates, saves, loads and switches between environments on your local computer. It was created for Python programs, but it can package and distribute software for any language.</description></item><item><title>Get Started with Proxmox</title><link>https://yanboyang.com/proxmox/</link><pubDate>Mon, 03 Feb 2020 06:11:32 +1000</pubDate><author>Author</author><guid>https://yanboyang.com/proxmox/</guid><description>Introduction Proxmox Virtual Environment is an open source server virtualization management solution based on QEMU/KVM and LXC. Proxmox VE is based on Debian. You can manage virtual machines, containers, highly available clusters, storage and networks with an integrated, easy-to-use web interface or via CLI.
Install I recommend you use USB Flash Drive as Installation Medium because it is the faster option.
Download the installer ISO image You can download ISO image from: https://www.</description></item><item><title>Docker as Local Development Environment</title><link>https://yanboyang.com/dockeraslocaldevelopmentenvironment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>Author</author><guid>https://yanboyang.com/dockeraslocaldevelopmentenvironment/</guid><description>Introduction https://blog.atulr.com/docker-local-environment/
Perrequires Install Docker Install Docker Compose Docker Docker is a tool designed to make it easier to create, deploy, and run applications by using containers. Containers allow a developer to package up an application with all of the parts it needs, such as libraries and other dependencies, and ship it all out as one package.
Docker container To form a mental picture, for the time being just consider a Docker Container as an extremely light weight isolated linux based virtual machine inside which we will run our application service (although containers are not exactly VMs).</description></item><item><title>How to install Docker, Nvidia Docker and Docker Compose</title><link>https://yanboyang.com/dockerinstall/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>Author</author><guid>https://yanboyang.com/dockerinstall/</guid><description>Install Docker https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-18-04 https://docs.docker.com/engine/install/ubuntu/
Step 1 — Installing Docker The Docker installation package available in the official Ubuntu repository may not be the latest version. To ensure we get the latest version, we’ll install Docker from the official Docker repository. To do that, we’ll add a new package source, add the GPG key from Docker to ensure the downloads are valid, and then install the package.
First, update your existing list of packages:</description></item></channel></rss>