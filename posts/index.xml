<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - Boyang Yan's Tech Blog</title><link>https://yanboyang.com/posts/</link><description>All Posts | Boyang Yan's Tech Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>yanboyang713@gmail.com (Boyang Yan)</managingEditor><webMaster>yanboyang713@gmail.com (Boyang Yan)</webMaster><lastBuildDate>Wed, 29 Dec 2021 15:08:00 +0800</lastBuildDate><atom:link href="https://yanboyang.com/posts/" rel="self" type="application/rss+xml"/><item><title>Getting Started with Org Roam</title><link>https://yanboyang.com/orgroam/</link><pubDate>Wed, 29 Dec 2021 15:08:00 +0800</pubDate><author>Author</author><guid>https://yanboyang.com/orgroam/</guid><description>Set-up org roam</description></item><item><title>Using Ceph with Proxmox</title><link>https://yanboyang.com/cephonproxmox/</link><pubDate>Wed, 29 Dec 2021 12:23:00 +0800</pubDate><author>Author</author><guid>https://yanboyang.com/cephonproxmox/</guid><description>Objective This guide explains how to set up the Cloud Disk Array on Proxmox.
Requirements Fist of all, you need your Cloud Disk Array up and ready. Make sure you have:
created a cluster pool for storing data created a Ceph user that Proxmox will use to access the CDA cluster configured permissions for this user and pool (allow read and write) configured your IP access control list to allow Proxmox nodes to access the CDA</description></item><item><title>Nix Flakes</title><link>https://yanboyang.com/nixflakes/</link><pubDate>Tue, 28 Dec 2021 11:23:00 +0800</pubDate><author>Author</author><guid>https://yanboyang.com/nixflakes/</guid><description>Introduction Nix Flakes are an upcoming feature of the Nix package manager.
Flakes replace stateful channels (which cause much confusion among novices) and introduce a more intuitive and consistent CLI, making them a perfect opportunity to start using Nix.
It contains examples and advice on using flakes for a real-life use case: building applications in various languages.
Pre-reading Nix/Getting Started with Nix Installing flakes In order to do anything with flakes, you will first have to get “unstable” Nix up and running on your machine.</description></item><item><title>Home Manager using Nix</title><link>https://yanboyang.com/nixhomemanager/</link><pubDate>Sun, 26 Dec 2021 17:30:00 +0800</pubDate><author>Author</author><guid>https://yanboyang.com/nixhomemanager/</guid><description>Standalone installation Add the appropriate Home Manager channel. If you are following Nixpkgs master or an unstable channel you can run.
1 2 nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager nix-channel --update 1 2 cat ~/.nix-channels nix-channel --list Check your echo $NIX_PATH, If your have NOT
you may have to add
1 2 3 4 5 6 export NIX_PATH=$HOME/.nix-defexpr/channels${NIX_PATH:+:}$NIX_PATH /nix/var/nix/profiles/per-user/yanboyang713/channels export NIX_PATH=nixpkgs=/nix/var/nix/profiles/per-user/yanboyang713/channels/nixpkgs:/nix/var/nix/profiles/per-user/yanboyang713/channels:~/.nix-defexpr/channels to your shell</description></item><item><title>Nix Installation</title><link>https://yanboyang.com/nixinstallation/</link><pubDate>Sun, 26 Dec 2021 15:18:00 +0800</pubDate><author>Author</author><guid>https://yanboyang.com/nixinstallation/</guid><description>Supported Platforms Nix is currently supported on the following platforms:
Linux (i686, x86_64, aarch64). macOS (x86_64). Installing a Binary Distribution We recommend the multi-user install if it supports your platform and you can authenticate with sudo.
Single User Installation To explicitly select a single-user installation on your system:
1 sh &amp;lt;(curl -L https://nixos.org/nix/install) --no-daemon This will perform a single-user installation of Nix, meaning that /nix is owned by the invoking user.</description></item><item><title>Getting Started with Nix</title><link>https://yanboyang.com/nix/</link><pubDate>Fri, 24 Dec 2021 12:34:00 +0800</pubDate><author>Author</author><guid>https://yanboyang.com/nix/</guid><description>Introduction The NixOS package manager is a system of its own. You can use it under any Linux Distribution.
What is Nix? Briefly speaking, Nix is a package manager and a build system. Its most important aspect is allowing to write declarative scripts for reproducible software builds. It also helps to test and deploy software systems while using the functional programming paradigm. There is a vast repository of packages for Nix called nixpkgs, and a GNU/Linux distribution that extends the ideas of Nix to the OS level called NixOS.</description></item><item><title>VIM Keyboard Shortcuts Cheatsheet</title><link>https://yanboyang.com/vim/</link><pubDate>Tue, 21 Dec 2021 16:16:00 +0800</pubDate><author>Author</author><guid>https://yanboyang.com/vim/</guid><description>Introduction This post document is brief introduction about how to use VIM/VI text editor and help you remember the shortcuts. The Vim editor is a command-line based tool that’s an enhanced version of the venerable vi editor. Despite the abundance of graphical rich text editors, familiarity with Vim will help every Linux user – from an experienced system administrator to a newbie Raspberry Pi user.
One important thing to note when using Vim, is that the function of a key depends on the &amp;ldquo;mode&amp;rdquo; the editor is in.</description></item><item><title>Arch Linux/Manjaro sound and sound card configuration</title><link>https://yanboyang.com/configsound/</link><pubDate>Mon, 20 Dec 2021 19:04:00 +0800</pubDate><author>Author</author><guid>https://yanboyang.com/configsound/</guid><description>Introduction After install Arch Linux/Manjaro, although alsa-utils has been installed, it may still not play sound correctly. Here is a solution.
First try 1 amixer sset Master unmute If you use alsamixer to unmute the master sound, you still can&amp;rsquo;t play the sound.
Please, following the steps at the below.
NOTE: If you faced maixer: Unable to find simple cintrol &amp;lsquo;Master&amp;rsquo;, 0, that means, it maybe that the sound card device cannot be found or the sound card driver us not installed.</description></item><item><title>Virtualize Windows 11 with Proxmox</title><link>https://yanboyang.com/windows11pve/</link><pubDate>Mon, 20 Dec 2021 12:37:00 +0800</pubDate><author>Author</author><guid>https://yanboyang.com/windows11pve/</guid><description><![CDATA[Introduction As Microsoft released Windows 11, it was made clear that TPM 2.0 and Secure boot is no longer optional but mandatory, without these capabilities on the hardware/virtual hardware, Windows 11 refuse to install.
Step 1: Download Windows 11 ISO You can click Here for download ISO file.
Step 2: Download virtio-win drivers disk You can click Here, download Latest virtio-win ISO.
Step 3: Upload Windows 11 ISO and Latest virtio-win ISO to ProxMox login to ProxMox -&gt; choose Node -&gt; local (pve) -&gt; ISO Images -&gt; Upload]]></description></item><item><title>Managing Your Dotfiles With Git and Make</title><link>https://yanboyang.com/dotfiles/</link><pubDate>Fri, 17 Dec 2021 18:59:00 +0800</pubDate><author>Author</author><guid>https://yanboyang.com/dotfiles/</guid><description>Introduction User-specific application configuration is traditionally stored in so called dotfiles (files whose filename starts with a dot). It is common practice to track dotfiles with a version control system such as Git to keep track of changes and synchronize dotfiles across various hosts. There are various approaches to managing your dotfiles. In this article, I will talk about How to use Make with Git to management your dotfiles and package.</description></item></channel></rss>